<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="ee-transform-Flow">
        <set-variable variableName="var1" value="#[{&quot;customerData&quot;: [{&quot;data&quot;: &quot;data1&quot;, &quot;value&quot;: &quot;value1&quot;}, {&quot;data&quot;: &quot;data2&quot;, &quot;value&quot;: &quot;value2&quot;}], &quot;groupData&quot;: [{&quot;name&quot;: &quot;data1&quot;, &quot;value&quot;: &quot;value1&quot;}, {&quot;name&quot;: &quot;data3&quot;, &quot;value&quot;: &quot;value3&quot;}]}" doc:name="Variable"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload>
                <![CDATA[%dw 1.0
                %output application/json
                ---
                {
                    Customer: {
                        customAttribute: flowVars.var1.customerData map ((data01 , indexOfData01) -> {
                            (flowVars.var1.groupData filter ($.name == data01.data and $.value == data01.value) map ((data02, indexOfPayload02) -> {
                                data: data02.name
                            }))
                        }) filter ($ != {})
                    }
                }
                ]]>
            </dw:set-payload>
        </dw:transform-message>
        <logger/>
    </flow>
</mule>
