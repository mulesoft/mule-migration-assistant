id: client-id-enforcement
name: Client ID enforcement
supportedPoliciesVersions: '>=v1'
description: |
  All calls to the API must include a client ID and client secret for an application that is registered to use the API.

  This policy will require updates to the RAML/OAS definition in order to function.
  You can obtain the RAML/OAS snippet and learn more [here](https://docs.mulesoft.com/anypoint-platform-for-apis/client-id-based-policies).
category: Compliance
type: system
violationCategory: authentication
resourceLevelSupported: true
encryptionSupported: true
standalone: true
requiredCharacteristics: []
providedCharacteristics: [Client ID required]
configuration:
- propertyName: credentialsOriginHasHttpBasicAuthenticationHeader
  name: Credentials origin
  description: Origin of the Client ID and Client Secret credentials.
  options:
  - {name: HTTP Basic Authentication Header, value: httpBasicAuthenticationHeader}
  - {name: Custom Expression, value: customExpression}
  type: radio
  defaultValue: customExpression
  optional: false
  sensitive: false
  allowMultiple: false
- {propertyName: clientIdExpression, name: Client ID Expression, description: Mule
    Expression to be used to extract the Client ID from API requests, type: expression,
  defaultValue: '#[attributes.headers[''client_id'']]', optional: false, sensitive: false,
  allowMultiple: false, dependsOnKey: credentialsOriginHasHttpBasicAuthenticationHeader,
  dependsOnValue: customExpression, dependsOnUnfulfilledDefaultValue: '#[attributes.headers[''client_id'']]'}
- {propertyName: clientSecretExpression, name: Client Secret Expression, description: Mule
    Expression to be used to extract the Client Secret from API requests, type: expression,
  defaultValue: '#[attributes.headers[''client_secret'']]', optional: true, sensitive: false,
  allowMultiple: false, dependsOnKey: credentialsOriginHasHttpBasicAuthenticationHeader,
  dependsOnValue: customExpression}
ramlSnippet: |
  Client ID based policies by default expect to obtain the client ID and secret as headers. To enforce this in the API definition a trait can be defined in RAML as shown below.

  ```
  traits:
    - client-id-required:
        headers:
          client_id:
            type: string
          client_secret:
            type: string
        responses:
          401:
            description: Unauthorized or invalid client application credentials
          500:
            description: Bad response from authorization server, or WSDL SOAP Fault error
  ```

  This trait must then be applied to the resource or methods using the `is` RAML attribute.

  ```
  /products:
    get:
      is: [client-id-required]
      description: Gets a list of all the inventory products.
  ```

  Please read [Applying Resource Types and Traits](https://github.com/raml-org/raml-spec/blob/master/versions/raml-08/raml-08.md#resource-types-and-traits) section on RAML documention for more information.
ramlV1Snippet: |
  Client ID based policies by default expect to obtain the client ID and secret as headers. To enforce this in the API definition a trait can be defined in RAML as shown below.

  ```
  traits:
    client-id-required:
      headers:
        client_id:
          type: string
        client_secret:
          type: string
      responses:
        401:
          description: Unauthorized or invalid client application credentials
        500:
          description: Bad response from authorization server, or WSDL SOAP Fault error
  ```

  This trait must then be applied to the resource or methods using the `is` RAML attribute.

  ```
  /products:
    get:
      is: [client-id-required]
      description: Gets a list of all the inventory products.
  ```

  Please read [Applying Resource Types and Traits](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md#applying-resource-types-and-traits) section on RAML documention for more information.
oasV2Snippet: |
  Client ID based policies by default expect to obtain the client ID and secret as headers. To enforce this in the API definition parameters can be defined in OAS as shown below.
  ```
  "parameters": {
    "client_id": {
      "type": "string",
      "in": "header",
      "name": "client_id",
      "required": true
    },
    "client_secret": {
      "type": "string",
      "in": "header",
      "name": "client_secret",
      "required": true
    }
  },
  "responses": {
   "trait:client-id-required:401": {
     "description": "Unauthorized or invalid client application credentials"
   },
   "trait:client-id-required:500": {
     "description": "Bad response from authorization server, or WSDL SOAP Fault error"
   }
  }
  ```
  Relative reference must then be applied to the paths that require client id authentication.
  ```
  "paths": {
    "/products": {
      "get": {
        "description": "Gets a list of all the inventory products.",
        "operationId": "GET_products",
        "responses": {
          "default": {
            "description": ""
          },
          "401": {
            "$ref": "#/responses/trait:client-id-required:401"
          },
          "500": {
            "$ref": "#/responses/trait:client-id-required:500"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/client_id"
          },
          {
            "$ref": "#/parameters/client_secret"
          }
        ]
      }
    }
  }
  ```
  Please read [Open Api Specification for more information](https://swagger.io/specification/v2/).
oasV3Snippet: |-
  Client ID based policies by default expect to obtain the client ID and secret as headers. To enforce this in the API definition parameters can be defined to the components object in OAS as shown below.
  ```
  "components": {
    "parameters": {
      "client_id": {
        "in": "header",
        "name": "client_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "client_secret": {
        "in": "header",
        "name": "client_secret",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
     "trait_client-id-required_401": {
       "description": "Unauthorized or invalid client application credentials"
     },
     "trait_client-id-required_500": {
       "description": "Bad response from authorization server, or WSDL SOAP Fault error"
     }
    }
  }
  ```
  Relative reference must then be applied to the paths that require client id authentication.
  ```
  "paths": {
    "/products": {
      "get": {
        "description": "Gets a list of all the inventory products.",
        "operationId": "GET_products",
        "responses": {
          "default": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/trait_client-id-required_401"
          },
          "500": {
            "$ref": "#/components/responses/trait_client-id-required_500"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/client_id"
          },
          {
            "$ref": "#/components/parameters/client_secret"
          }
        ]
      }
    }
  }
  ```
  Please read [Open Api Specification for more information](https://swagger.io/docs/specification/about/).
