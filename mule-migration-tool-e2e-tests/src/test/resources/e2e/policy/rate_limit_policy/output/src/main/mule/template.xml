<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:http-policy="http://www.mulesoft.org/schema/mule/http-policy" xmlns:http-transform="http://www.mulesoft.org/schema/mule/http-policy-transform" xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns:throttling="http://www.mulesoft.org/schema/mule/throttling" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http-policy-transform http://www.mulesoft.org/schema/mule/http-policy-transform/current/mule-http-policy-transform.xsd http://www.mulesoft.org/schema/mule/http-policy http://www.mulesoft.org/schema/mule/http-policy/current/mule-http-policy.xsd http://www.mulesoft.org/schema/mule/throttling http://www.mulesoft.org/schema/mule/throttling/current/mule-throttling.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <throttling:config name="rateLimitConfig" clusterizable="true">
        <throttling:tier-provider>
            <throttling:explicit>
                <throttling:keys>
                    <throttling:key>
                        <throttling:tiers>
                            {{#rateLimits}}
                            <throttling:tier maximumRequestsPerPeriod="{{maximumRequests}}" timePeriodMillis="{{timePeriodInMilliseconds}}" />
                            {{/rateLimits}}
                        </throttling:tiers>
                    </throttling:key>
                </throttling:keys>
            </throttling:explicit>
        </throttling:tier-provider>
    </throttling:config>

    <http-policy:proxy name="Rate Limiting">
        <http-policy:source>
            <try>
                <throttling:rate-limit id="{{policyId}}-rate-limit" config-ref="rateLimitConfig" target="throttlingResponse" />
                <http-policy:execute-next />
                <http-transform:add-headers outputType="response">
                    <http-transform:headers>#[ { 'x-ratelimit-remaining': vars.throttlingResponse.availableQuota as String, 'x-ratelimit-limit': vars.throttlingResponse.maximumAllowedRequests as String, 'x-ratelimit-reset': vars.throttlingResponse.remainingFrame as String } ]</http-transform:headers>
                </http-transform:add-headers>
                <error-handler>
                    <on-error-continue type="THROTTLING:QUOTA_EXCEEDED" logException="false">
                        <http-transform:set-response statusCode="429">
                            <http-transform:body>#[ output application/json --- {"error": "$(error.description)"} ]</http-transform:body>
                            <http-transform:headers>#[ { 'x-ratelimit-remaining': error.exception.availableQuota as String, 'x-ratelimit-limit': error.exception.maximumAllowedRequests as String, 'x-ratelimit-reset': error.exception.remainingFrame as String } ]</http-transform:headers>
                        </http-transform:set-response>
                    </on-error-continue>
                    <on-error-propagate>
                        <http-transform:add-headers outputType="response">
                            <http-transform:headers>#[ { 'x-ratelimit-remaining': vars.throttlingResponse.availableQuota as String, 'x-ratelimit-limit': vars.throttlingResponse.maximumAllowedRequests as String, 'x-ratelimit-reset': vars.throttlingResponse.remainingFrame as String } ]</http-transform:headers>
                        </http-transform:add-headers>
                    </on-error-propagate>
                </error-handler>
            </try>
        </http-policy:source>
    </http-policy:proxy>

</mule>
