<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd">

    <!--Migration INFO: Email transformers are no longer needed. The payload already has the type information.-->
    <!--    For more information refer to:-->
    <!--        * https://docs.mulesoft.com/mule-runtime/4.3/intro-transformations#data-types-and-object-to-string-byte-inputstream-transformers-->
    <!--<custom-transformer xmlns="http://www.mulesoft.org/schema/mule/core" name="rfc822-mime" class="org.mule.transport.email.transformers.Rfc822ByteArraytoMimeMessage" />-->
    <!--Migration INFO: Email transformers are no longer needed. The payload already has the type information.-->
    <!--    For more information refer to:-->
    <!--        * https://docs.mulesoft.com/mule-runtime/4.3/intro-transformations#data-types-and-object-to-string-byte-inputstream-transformers-->
    <!--<custom-transformer xmlns="http://www.mulesoft.org/schema/mule/core" name="mime-rfc822" class="org.mule.transport.email.transformers.MimeMessageToRfc822ByteArray" />-->
    <email:pop3-config name="Pop3Config">
        <email:pop3-connection host="localhost" port="${pop3Port}" user="bob" password="secret" />
    </email:pop3-config>

    <email:smtp-config name="SmtpConfig">
        <email:smtp-connection host="localhost" port="${smtpPort}" user="alice" password="secret" />
    </email:smtp-config>

    <vm:config name="VmConfig">
        <vm:queues>
            <vm:queue queueName="sink" queueType="TRANSIENT" />
            <vm:queue queueName="rfc822" queueType="TRANSIENT" />
        </vm:queues>
    </vm:config>

    <flow name="source">
        <email:listener-pop3 config-ref="Pop3Config">
            <!--Migration WARN: No compatibility mode is not fully implemented so connectors might experience issues with missing inbound/outbound property migrations.-->
            <scheduling-strategy>
                <fixed-frequency />
            </scheduling-strategy>
        </email:listener-pop3>

        <async>
            <vm:publish config-ref="VmConfig" queueName="sink">
                <!--Migration WARN: No compatibility mode is not fully implemented so connectors might experience issues with missing inbound/outbound property migrations.-->
                <vm:content>
                    <!--Migration WARN: You can remove this if this flow is not using 'sessionVariables' or after migrating them to variables.-->
                    <!--    For more information refer to:-->
                    <!--        * https://github.com/mulesoft/mule-migration-assistant/blob/master/docs/user-docs/migration-tool-post-mig.adoc#session_variables-->
                    <![CDATA[#[output application/java --- {'_vmTransportMode': true, 'payload': payload.^raw, 'mimeType': payload.^mimeType, 'session': vars.compatibility_outboundProperties['MULE_SESSION']}]]]>
                </vm:content>
            </vm:publish>
        </async>

    </flow>

    <flow name="sink">
        <vm:listener config-ref="VmConfig" queueName="sink">
            <!--Migration WARN: No compatibility mode is not fully implemented so connectors might experience issues with missing inbound/outbound property migrations.-->
            <vm:response>
                <vm:content>
                    <!--Migration WARN: You can remove this if this flow is not using 'sessionVariables' or after migrating them to variables.-->
                    <!--    For more information refer to:-->
                    <!--        * https://github.com/mulesoft/mule-migration-assistant/blob/master/docs/user-docs/migration-tool-post-mig.adoc#session_variables-->
                    <![CDATA[#[output application/java --- {'_vmTransportMode': true, 'payload': payload.^raw, 'mimeType': payload.^mimeType, 'session': vars.compatibility_outboundProperties['MULE_SESSION']}]]]>
                </vm:content>
            </vm:response>
        </vm:listener>

        <logger />

        <scatter-gather>
            <route>
                <async>
                    <vm:publish config-ref="VmConfig" queueName="rfc822">
                        <!--Migration WARN: No compatibility mode is not fully implemented so connectors might experience issues with missing inbound/outbound property migrations.-->
                        <vm:content>
                            <!--Migration WARN: You can remove this if this flow is not using 'sessionVariables' or after migrating them to variables.-->
                            <!--    For more information refer to:-->
                            <!--        * https://github.com/mulesoft/mule-migration-assistant/blob/master/docs/user-docs/migration-tool-post-mig.adoc#session_variables-->
                            <![CDATA[#[output application/java --- {'_vmTransportMode': true, 'payload': payload.^raw, 'mimeType': payload.^mimeType, 'session': vars.compatibility_outboundProperties['MULE_SESSION']}]]]>
                        </vm:content>
                    </vm:publish>
                </async>
            </route>
            <route>
                <email:send config-ref="SmtpConfig" fromAddress="#[migration::SmtpTransport::smtpFromAddress(vars)]" subject="#[migration::SmtpTransport::smtpSubject(vars)]">
                    <!--Migration WARN: No compatibility mode is not fully implemented so connectors might experience issues with missing inbound/outbound property migrations.-->
                    <!--Migration ERROR: Use the inline configuration of the operation instead of relying on properties set before this endpoint.-->
                    <!--    For more information refer to:-->
                    <!--        * https://docs.mulesoft.com/mule-runtime/4.3/migration-connectors-email#migrating-an-smtp-outbound-endpoint-->
                    <email:to-addresses>
                        <email:to-address value="#[migration::SmtpTransport::smtpToAddress(vars)]" />
                    </email:to-addresses>
                    <email:cc-addresses>
                        <email:cc-address value="#[migration::SmtpTransport::smtpCcAddress(vars)]" />
                    </email:cc-addresses>
                    <email:bcc-addresses>
                        <email:bcc-address value="#[migration::SmtpTransport::smtpBccAddress(vars)]" />
                    </email:bcc-addresses>
                    <email:reply-to-addresses>
                        <email:reply-to-address value="#[migration::SmtpTransport::smtpReplyToAddress(vars)]" />
                    </email:reply-to-addresses>
                    <email:headers>#[migration::SmtpTransport::smtpCustomHeaders(vars)]</email:headers>
                    <email:body contentType="#[payload.^mimeType]">
                        <email:content>#[payload]</email:content>
                    </email:body>
                    <email:attachments>#[vars filterObject ((value,key) -&gt; ((key as String) startsWith 'att_')) pluck ((value, key, index) -&gt; value)]</email:attachments>
                </email:send>
            </route>
        </scatter-gather>

    </flow>

</mule>
