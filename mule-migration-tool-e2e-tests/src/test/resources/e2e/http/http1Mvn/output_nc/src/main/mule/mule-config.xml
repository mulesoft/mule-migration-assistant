<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:httpn="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <http:listener-config name="httpConf">
        <http:listener-connection host="localhost" port="${httpPort}" />
    </http:listener-config>

    <flow name="listenerContentType">
        <http:listener config-ref="httpConf" path="testInput">
            <!--Migration WARN: No compatibility mode is not fully implemented so connectors might experience issues with missing inbound/outbound property migrations.-->
            <http:response statusCode="#[200]">
                <http:headers>#[vars filterObject ($$ startsWith 'outbound_') mapObject {($$ dw::core::Strings::substringAfter '_'): $}]</http:headers>
            </http:response>
            <http:error-response>
                <http:headers>#[vars filterObject ($$ startsWith 'outbound_') mapObject {($$ dw::core::Strings::substringAfter '_'): $}]</http:headers>
            </http:error-response>
        </http:listener>

        <set-payload value="{ &quot;key1&quot; : &quot;value&quot;, &quot;key2&quot; : 2 }" mimeType="application/json" encoding="UTF-8" />
    </flow>

</mule>
