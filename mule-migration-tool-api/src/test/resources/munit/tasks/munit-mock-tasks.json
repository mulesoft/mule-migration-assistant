{
  "tasks":
  [
    {
      "xpathSelector" : "//munit:test/mock:when",
      "taskDescriptor" : "Declare MUnit tools namespace on file and update assertion processors namespace",
      "stepsDefinition" : [
        {
          "stepDescriptor" : "Add munit tools namespace",
          "type" : "com.mulesoft.tools.migration.library.step.SetNodeNamespace",
          "parameters" : {
            "newNamespace" : "munit-tools",
            "newNamespaceUri" : "http://www.mulesoft.org/schema/mule/munit-tools",
            "schemaLocationUrl" : "http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xs"
          }
        },
        {
          "stepDescriptor" : "Update mock namespace on nodes",
          "type" : "com.mulesoft.tools.migration.library.step.ReplaceNodesName",
          "parameters" : {
            "nodeNamespace" : "munit-tools",
            "newNodeName" : "mock-when"
          }
        },
        {
          "stepDescriptor": "Update messageProcessor property on mock",
          "type": "com.mulesoft.tools.migration.library.step.UpdateAttributeName",
          "parameters": {
            "attributeName": "messageProcessor",
            "newName": "processor"
          }
        },
        {
          "stepDescriptor" : "Delete mock namespace from file",
          "type" : "com.mulesoft.tools.migration.library.step.DeleteNamespace",
          "parameters" : {
            "namespace" : "mock",
            "namespaceUri" : "http://www.mulesoft.org/schema/mule/mock",
            "schemaLocationUrl" : "http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd"
          }
        }
      ]
    },
    {
      "xpathSelector" : "//munit:test/munit-tools:mock-when/munit-tools:with-attributes/munit-tools:with-attribute",
      "taskDescriptor" : "Extract payload on then return to a new child node",
      "stepsDefinition" : [
        {
          "stepDescriptor" : "Update attribute name property on mock",
          "type" : "com.mulesoft.tools.migration.library.step.UpdateAttributeName",
          "parameters" : {
            "attributeName" : "name",
            "newName" : "attributeName"
          }
        }
      ]
    },
    {
      "xpathSelector" : "//munit:test/munit-tools:mock-when/munit-tools:then-return",
      "taskDescriptor" : "Extract payload on then return to a new child node",
      "stepsDefinition" : [
        {
          "stepDescriptor" : "Move Set Payload property to a child node",
          "type" : "com.mulesoft.tools.migration.library.step.CreateChildNodeFromAttribute",
          "parameters" : {
            "attribute" : "payload"
          }
        },
        {
          "stepDescriptor" : "Move encoding attribute to child node payload",
          "type" : "com.mulesoft.tools.migration.library.step.MoveAttributeToChildNode",
          "parameters" : {
            "attribute" : "encoding",
            "childNode" : "payload"
          }
        },
        {
          "stepDescriptor" : "Move mimeType attribute to child node payload",
          "type" : "com.mulesoft.tools.migration.library.step.MoveAttributeToChildNode",
          "parameters" : {
            "attribute" : "mimeType",
            "childNode" : "payload"
          }
        }
      ]
    },
    {
      "xpathSelector" : "//munit:test/munit-tools:mock-when/munit-tools:then-return/munit-tools:invocation-properties",
      "taskDescriptor" : "Invocation Properties are now Variables",
      "stepsDefinition" : [
        {
          "stepDescriptor" : "Change invocation properties to variables",
          "type" : "com.mulesoft.tools.migration.library.step.ReplaceNodesName",
          "parameters" : {
            "nodeNamespace" : "munit-tools",
            "newNodeName" : "variables"
          }
        }
      ]
    },
    {
      "xpathSelector" : "//munit:test/munit-tools:mock-when/munit-tools:then-return/munit-tools:variables/munit-tools:invocation-property",
      "taskDescriptor" : "Update each invocation property on Mock to variable",
      "stepsDefinition" : [
        {
          "stepDescriptor" : "Update invocation property on Mock to variable",
          "type" : "com.mulesoft.tools.migration.library.step.ReplaceNodesName",
          "parameters" : {
            "nodeNamespace" : "munit-tools",
            "newNodeName" : "variable"
          }
        }
      ]
    },
    {
      "xpathSelector" : "//munit:test/munit-tools:mock-when/descendant::*[attribute::mimeType]",
      "taskDescriptor" : "Update mimeType property to mediaType",
      "stepsDefinition" : [
        {
          "stepDescriptor" : "Update mimeType attribute to mediaType",
          "type" : "com.mulesoft.tools.migration.library.step.UpdateAttributeName",
          "parameters" : {
            "attributeName" : "mimeType",
            "newName" : "mediaType"
          }
        }
      ]
    }
  ]
}
